name: CMake Multi-Platform Build

on:
  push:
    branches: ["master"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set build output directory
      run: echo "BUILD_DIR=${GITHUB_WORKSPACE}/build" >> $GITHUB_ENV

    - name: Set up MSVC
      if: matrix.os == 'windows-latest'
      uses: microsoft/setup-msbuild@v1

    - name: Configure CMake with Ninja
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          cmd.exe /C '"C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat" && cmake -B %BUILD_DIR% -G Ninja -S %GITHUB_WORKSPACE%'
        else
          cmake -B $BUILD_DIR \
                -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
                -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
                -DCMAKE_BUILD_TYPE=Release \
                -G Ninja \
                -S $GITHUB_WORKSPACE
        fi

    - name: Build with Ninja
      run: cmake --build $BUILD_DIR

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.os }}
        path: $BUILD_DIR
        retention-days: 30
