name: CMake Multi-Platform Build

on:
  push:
    branches: ["master"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up MSVC
      if: matrix.os == 'windows-latest'
      uses: microsoft/setup-msbuild@v1

    - name: Configure CMake with Ninja
      shell: bash
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cmd.exe /C '"C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat" && cmake -B "%CD%\build" -G Ninja -S "%CD%"'
        else
          cmake -B ${{ github.workspace }}/build \
                -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
                -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
                -DCMAKE_BUILD_TYPE=Release \
                -G Ninja \
                -S ${{ github.workspace }}

    - name: Build with Ninja
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          cmake --build "%CD%\build"
        else
          cmake --build ${{ github.workspace }}/build

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.os }}
        path: ${{ github.workspace }}/build
        retention-days: 30
